# -*- coding: utf-8 -*-
"""Data Pre-Processing [PART-1].ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1anIL8Fb1Swo48g1MY_wzAd0Mla-Va4ik
"""

# pip --version

# pip install chembl_webresource_client

import pandas as pd
from chembl_webresource_client.new_client import new_client

def preProcess(id):
    
    target = new_client.target
    target_query = target.search(id)
    targets = pd.DataFrame.from_dict(target_query)
    
    # selected_target

    selected_target = targets.target_chembl_id[0]

    # Retrieve bioactivity

    activity = new_client.activity
    res = activity.filter(target_chembl_id=selected_target).filter(
        standard_type="IC50")
    df = pd.DataFrame.from_dict(res)

    # Save bioactivity to a CSV file
    
    df.to_csv('medi/Model/bioactivity_data_raw.csv', index=False)

    # Drop missing 'standard_value' values

    df2 = df[df.standard_value.notna()]
    # df2.head()


    # Data Pre-processing

    # 1. Labeling bioactivity classes -> active, intermediate, inactive
    bioactivity_class = []
    for i in df2.standard_value:
        if float(i) >= 10000:
            bioactivity_class.append("inactive")
        elif float(i) <= 1000:
            bioactivity_class.append("active")
        else:
            bioactivity_class.append("intermediate")

    # bioactivity_class

    # Combine the 3 columns: ((molecule_chembl_id,canonical_smiles,standard_value)

    selection = ['molecule_chembl_id', 'canonical_smiles', 'standard_value']
    df3 = df2[selection]
    # df3

    bioactivity_class = pd.Series(bioactivity_class, name='bioactivity_class')
    df4 = pd.concat([df3, bioactivity_class], axis=1)
    # df4

    # Save dataframe to csv file

    df4.to_csv('medi/Model/bioactivity_data_preprocessed.csv', index=False)
